%PDF-1.3
%‚„œ”
2 0 obj
<<
/Length 2217
>>
stream
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
14 0 0 14 28 811 Tm
0 g
/GS2 gs
0 Tc
0 Tw
( )Tj
ET
Q
BT
/TT2 1 Tf
14 0 0 14 186.34 761.745 Tm
0 0 0 1 k
/GS2 gs
0 Tc
0 Tw
(THE UNIVERSITY OF ADELAIDE)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
12 0 0 12 32 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
12 0 0 12 221.361 712.079 Tm
(Examination for the Degrees of)Tj
-5.7075 -1.1667 TD
(Bachelor of Computer Science, Bachelor of Design Studies,)Tj
0.1526 -1.1667 TD
(Bachelor of Engineering \(Computer Systems Engineering\),)Tj
-6.2747 -1.1667 TD
(Bachelor of Engineering \(Information Technology and Telecommunications Engineering\),)Tj
7.1929 -1.1667 TD
(Bachelor of Information Science, Bachelor of Science,)Tj
-1.2637 -1.1667 TD
(Bachelor of Science \(Mathematical and Computer Sciences\),)Tj
3.6931 -1.1667 TD
(Graduate Certificate in Computer Science,)Tj
0.3601 -1.1667 TD
(Graduate Diploma in Computer Science,)Tj
1.0691 -1.1667 TD
(Master of Information Technology,)Tj
0.0562 -1.1667 TD
(Master of Engineering Science and)Tj
1.2908 -1.1667 TD
(Master of Computer Science)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
14 0 0 14 35 811 Tm
0 g
( )Tj
ET
Q
BT
14 0 0 14 139.145 522.745 Tm
(Primary Examination ñ Semester Two, November, 2004)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
14 0 0 14 38 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
14 0 0 14 159.724 471.745 Tm
(Comp Sci 3004/6014/7064: Operating Systems)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
14 0 0 14 42 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
14 0 0 14 197.274 420.745 Tm
(Official Reading Time: 10 minutes.)Tj
1.5408 -1.2143 TD
(Writing Time: 120 minutes.)Tj
-0.2222 -1.2142 TD
(Total Duration: 130 minutes.)Tj
2.333 -3.6429 TD
(Total Marks: 120)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
12 0 0 12 45 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
12 0 0 12 177.809 286.079 Tm
(THIS IS A CLOSED BOOK EXAMINATION)Tj
-4.0288 -2.3333 TD
(ANSWER ALL SIX QUESTIONS, SHOWING ALL WORKING)Tj
4.5852 -2.3333 TD
(CALCULATORS ARE NOT PERMITTED)Tj
-6.6389 -2.3333 TD
(EXAMINATION MATERIALS MUST NOT BE REMOVED FROM THE)Tj
10.5569 -1.1667 TD
(EXAMINATION ROOM)Tj
-7.6274 -4 TD
(THERE ARE FIVE PAGES IN ADDITION TO THIS PAGE)Tj
-2.1662 -4 TD
(DO NOT COMMENCE WRITING UNTIL INSTRUCTED TO DO SO)Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS2 6 0 R
>>
>>
endobj
9 0 obj
<<
/Length 4413
>>
stream
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
10 0 0 10 48 811 Tm
0 g
/GS2 gs
0 Tc
0 Tw
( )Tj
ET
Q
BT
/TT4 1 Tf
10 0 0 10 70.228 799.845 Tm
0 0 0 1 k
/GS2 gs
0 Tc
0 Tw
(Operating Systems)Tj
40.8292 0 TD
(Page 1 of 5)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 51 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 70.228 763.745 Tm
[(\(1\))-1410.9(Principles and Process Scheduling)]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 53 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 98.575 744.745 Tm
-0.0579 Tw
[(\(a\))-1467.1(Using examples, explain the distinction between policy and mechanism in operating system)]TJ
2.5769 -1.1818 TD
0 Tw
(design.)Tj
32.1062 -1.6364 TD
([8 Marks])Tj
-34.6831 -1.7273 TD
[(\(b\))-1410.9(Identify and define performance metrics appropriate for batch computing systems.)]TJ
34.6831 -1.6363 TD
([3 Marks])Tj
-34.6831 -1.7273 TD
[(\(c\))-1467.1(Identify and define performance metrics appropriate for interactive computing systems.)]TJ
34.6831 -1.6364 TD
([3 Marks])Tj
-34.6831 -1.7273 TD
0.0366 Tw
[(\(d\))-1410.9(In the CPU burst model of process execution, processes alternate between bursts of com-)]TJ
2.5769 -1.1818 TD
0.0615 Tw
(putation and waiting for IO to complete. You are to trace the operation of a pre-emptive)Tj
T*
0.0203 Tw
(process scheduling algorithm, with a quantum of 10 milliseconds. Pre-emption causes the)Tj
T*
-0.0366 Tw
(scheduler to make a scheduling decision and can occur both on expiration of the time quan-)Tj
T*
-0.0037 Tw
(tum, and whenever IO completes. Note that a time quantum expires every 10ms, not 10ms)Tj
T*
-0.0164 Tw
(since the last scheduling decision, so the completion of IO can cause a CPU bound process)Tj
T*
-0.0536 Tw
(to receive less than 10ms of CPU time. Each time it makes a scheduling decision, the sched-)Tj
T*
0.0297 Tw
(uler selects the process having the shortest time remaining in its current CPU burst as the)Tj
T*
0 Tw
(process to be run.)Tj
0 -1.6364 TD
0.0158 Tw
(There are three processes \(P1, P2 and P3\), each of which is ready to run at time zero. The)Tj
0 -1.1818 TD
0 Tw
(processes alternate between computation and waiting for IO as follows:)Tj
2.577 -1.7273 TD
(P1: 32ms CPU; 11ms IO; 10ms CPU; 15ms IO; 12ms CPU)Tj
T*
(P2: 8ms CPU; 20ms IO; 6ms CPU; 20ms IO; 14ms CPU)Tj
T*
(P3: 16ms CPU; 100ms IO; 2 ms CPU; 100ms IO)Tj
-2.577 -1.7273 TD
-0.0333 Tw
(Using a diagram, show when each process is running on the CPU, including any time when)Tj
0 -1.1818 TD
0.0313 Tw
(the CPU is idle. In addition, show when each process is waiting for IO. You may assume)Tj
T*
-0.0181 Tw
(that the system has sufficient IO capacity that all three processes can have IO operations in)Tj
T*
0 Tw
(progress at the same time.)Tj
31.6062 -1.7273 TD
([12 Marks])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 56 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 367.344 332.746 Tm
([Total Marks for Question 1:  26])Tj
-27.0105 -2.6364 TD
[(\(2\))-1410.9(Filesystems, Disks and IO)]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 59 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 98.575 284.746 Tm
-0.0315 Tw
[(\(a\))-1467.1(You are to evaluate the effectiveness of a disk scheduling algorithm called SSTF-R. This is)]TJ
2.5769 -1.1818 TD
0 Tw
(a modified version of SSTF \(shortest seek time first\).)Tj
0 -1.6364 TD
0.0032 Tw
(The base cost of a seek \(moving the head\) from track C to track T is given by the absolute)Tj
0 -1.1818 TD
0.0198 Tw
(value of the difference between the current track C and the target track T. However, at all)Tj
T*
-0.0456 Tw
(times, the head is moving in the direction implied by the last operation, and if the head must)Tj
T*
0.0264 Tw
(reverse direction, the cost of the seek is increased by five units. You may assume that the)Tj
T*
-0.0167 Tw
(head never reaches the inner or outer track, and hence ignore the cost of reversing the head)Tj
T*
0.0125 Tw
(movement in such cases. Given this, you can evaluate the cost of servicing each of the re-)Tj
T*
0 Tw
(maining operations in the disk scheduling queue.)Tj
0 -1.7272 TD
0.0988 Tw
(The SSTF-R algorithm operates incrementally, and chooses the operation for which the)Tj
0 -1.1818 TD
0.0474 Tw
(cost described above is minimal, services that operation, then repeats this process for the)Tj
T*
0 Tw
(remaining operations.)Tj
0 -1.7273 TD
(The head starts at track 11, moving outwards \(towards higher numbered tracks\))Tj
ET
endstream
endobj
10 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS2 6 0 R
>>
>>
endobj
12 0 obj
<<
/Length 4158
>>
stream
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
10 0 0 10 62 811 Tm
0 g
/GS2 gs
0 Tc
0 Tw
( )Tj
ET
Q
BT
/TT4 1 Tf
10 0 0 10 70.228 799.845 Tm
0 0 0 1 k
/GS2 gs
0 Tc
0 Tw
(Operating Systems)Tj
40.8292 0 TD
(Page 2 of 5)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
11 0 0 11 65 811 Tm
0 g
( )Tj
ET
Q
BT
11 0 0 11 126.921 763.745 Tm
( Disk operations are required on the following tracks:)Tj
2.577 -1.7273 TD
(13, 35, 40, 10, 9, 2, 28, 27)Tj
-2.577 -1.7273 TD
0.028 Tw
(Show the order in which tracks are accessed using SSTF-R, the cost associated with each)Tj
0 -1.1818 TD
0 Tw
(access, and the total cost of the accesses.)Tj
32.1062 -1.7273 TD
([6 Marks])Tj
-34.6831 -1.7272 TD
-0.0355 Tw
[(\(b\))-1410.9(You are to evaluate a modified disk scheduling algorithm called SSTF-2-R. This has all the)]TJ
2.5769 -1.1818 TD
-0.0014 Tw
(properties of SSTF-R as described above, except that, when there are three or more opera-)Tj
T*
-0.0001 Tw
(tions remaining, SSTF-2-R finds the set of two remaining operations for which the sum of)Tj
T*
-0.0368 Tw
(the cost of seeks is minimised, then selects the lower cost of the two as the operation to per-)Tj
T*
-0.0294 Tw
(form. Having performed this operation, it repeats the entire process for the remaining oper-)Tj
T*
0.1148 Tw
(ations \(i.e at each step, it finds a set of two operations, but only actually performs one)Tj
T*
0.0397 Tw
(operation\). Once there are two or less operations remaining, SSTF-2-R behaves the same)Tj
T*
0 Tw
(as SSTF-R.)Tj
0 -1.6364 TD
0.0431 Tw
(Given this, and the specific example described in \(a\), show the two-operation subsets se-)Tj
0 -1.1818 TD
-0.0292 Tw
(lected by SSTF-2-R at each step, the order in which tracks are accessed, the cost associated)Tj
T*
0 Tw
(with each access, and the total cost of the accesses.)Tj
32.1062 -1.7273 TD
([6 Marks])Tj
-34.6831 -1.7273 TD
-0.0301 Tw
[(\(c\))-1467.1(Traditional Unix filesystems divide disk information into data blocks \(containing data\) and)]TJ
2.5769 -1.1818 TD
-0.0551 Tw
(inodes \(containing file meta-data and index pointers enabling the location of the data blocks)Tj
T*
0.0107 Tw
(of the file\). It is suggested that support be added to store data directly in inodes \(replacing)Tj
T*
-0.0478 Tw
(the index pointers\), in addition to the existing approach \(i.e. not replacing it\). Write an eval-)Tj
T*
0 Tw
(uation of this suggestion.)Tj
32.1062 -1.6364 TD
([8 Marks])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 67 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 367.344 412.746 Tm
([Total Marks for Question 2:  20])Tj
-27.0105 -2.6364 TD
[(\(3\))-1410.9(Memory Management)]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 70 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 98.575 364.746 Tm
[(\(a\))-1467.1(You are given the following sequence of page accesses:)]TJ
5.1539 -1.6364 TD
(12, 14, 9, 11, 12, 9, 10, 11, 3, 14)Tj
-2.577 -1.7273 TD
-0.0502 Tw
(For a machine with four physical memory frames available, evaluate four page replacement)Tj
0 -1.1818 TD
0 Tw
(policies: FIFO, LRU, Optimal and Random. The operation of Random is that it selects the)Tj
T*
-0.0491 Tw
(frame into which the newly required page is to be loaded according the following sequence:)Tj
2.577 -1.7273 TD
0 Tw
(0, 3, 2, 0, 2, 1, 3, 1, 1, 0)Tj
-2.577 -1.7273 TD
-0.0223 Tw
(One element of this sequence is consumed each time a page is loaded. For all four policies,)Tj
0 -1.1818 TD
0 Tw
(the four frames are initially empty.)Tj
0 -1.7273 TD
0.0688 Tw
(Trace through the execution of all four policies, showing when page faults occur, where)Tj
0 -1.1818 TD
0 Tw
(pages are loaded and the total count of page faults in each case.)Tj
32.1062 -1.7273 TD
([8 Marks])Tj
-34.6831 -1.7273 TD
-0.0443 Tw
[(\(b\))-1410.9(Modify the FIFO, LRU and Random policies to load the page adjacent to the required page,)]TJ
2.5769 -1.1818 TD
-0.0517 Tw
(as well as the page itself. Pairs of adjacent pages are those for which integer division \(which)Tj
T*
0 Tw
(rounds down\) by two gives the same result. So for example:)Tj
2.577 -1.6364 TD
(pages 2 and 3 are adjacent)Tj
0 -1.7273 TD
(pages 10 and 11 are adjacent)Tj
T*
(pages 9 and 10 are NOT adjacent)Tj
ET
endstream
endobj
13 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS2 6 0 R
>>
>>
endobj
15 0 obj
<<
/Length 6237
>>
stream
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
10 0 0 10 73 811 Tm
0 g
/GS2 gs
0 Tc
0 Tw
( )Tj
ET
Q
BT
/TT4 1 Tf
10 0 0 10 70.228 799.845 Tm
0 0 0 1 k
/GS2 gs
0 Tc
0 Tw
(Operating Systems)Tj
40.8292 0 TD
(Page 3 of 5)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
11 0 0 11 76 811 Tm
0 g
( )Tj
ET
Q
BT
11 0 0 11 126.921 763.745 Tm
-0.021 Tw
(A consequence of the adjacent page modification is that Random will consume two frames)Tj
0 -1.1818 TD
0.011 Tw
(from the random sequence each time a page fault occurs, in order to select the two frames)Tj
T*
0 Tw
(into which to load two new pages.)Tj
0 -1.7273 TD
0.0764 Tw
(Trace through the execution of the modified LRU, FIFO and Random policies, showing)Tj
0 -1.1818 TD
0.0318 Tw
(when page faults occur, where pages are loaded and the total count of page faults in each)Tj
T*
0 Tw
(case.)Tj
32.1062 -1.7273 TD
([6 Marks])Tj
-34.6831 -1.7273 TD
-0.0135 Tw
[(\(c\))-1467.1(What property of memory access is the adjacent page modification in \(b\) attempting to ex-)]TJ
2.5769 -1.1818 TD
0 Tw
(ploit?)Tj
32.1062 -1.6364 TD
([2 Marks])Tj
-34.6831 -1.7273 TD
0.1265 Tw
[(\(d\))-1410.9(We excluded Optimal from evaluation with the adjacent page modification in \(b\). Is it)]TJ
2.5769 -1.1818 TD
0 Tw
(meaningful to re-evaluate Optimal in this context?)Tj
32.1062 -1.6364 TD
([4 Marks])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 78 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 367.344 535.746 Tm
([Total Marks for Question 3: )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 81 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 506.359 535.746 Tm
( )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 84 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 509.109 535.746 Tm
(20])Tj
-39.8983 -2.6364 TD
[(\(4\))-1410.9(Synchronisation)]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 87 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 98.575 487.746 Tm
[(\(a\))-1467.1(Define the terms )]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 89 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 202.976 487.746 Tm
(race condition)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 92 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 266.822 487.746 Tm
( and )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 95 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 288.205 487.746 Tm
(critical section)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 98 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 353.882 487.746 Tm
(?)Tj
11.5846 -1.6364 TD
([3 marks])Tj
-34.7944 -1.7273 TD
[(\(b\))-1410.9(Consider the following naÔve implementation of two processes, )]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 100 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 408.281 450.746 Tm
(P0)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 103 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 420.5 450.746 Tm
( and )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 106 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 441.882 450.746 Tm
(P1)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 109 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 454.101 450.746 Tm
(:)Tj
-28.4551 -1.6364 TD
(P_i:)Tj
0 -1.1818 TD
(do {)Tj
3.8654 -1.1818 TD
(while \(turn != i\) {})Tj
T*
(// critical section)Tj
T*
(turn = j; // \(where j == 1 - i\))Tj
T*
(// remainder section)Tj
-3.8654 -1.1818 TD
(} while\(true\);)Tj
-1.2885 -1.7273 TD
0.0191 Tw
(This implementation successfully ensures the critical-section problem requirement of )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 111 811 Tm
0 g
0 Tw
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 506.665 335.746 Tm
0 Tw
(mu-)Tj
-34.5222 -1.1818 TD
-0.0119 Tw
(tual exclusion)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 114 811 Tm
0 g
0 Tw
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 188.193 322.746 Tm
(. Hence it will never be the case the the critical sections of )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 117 811 Tm
0 g
0 Tw
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 445.5 322.746 Tm
0 Tw
(P0)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 120 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 457.719 322.746 Tm
-0.0119 Tw
[( and )]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 122 811 Tm
0 g
0 Tw
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 478.84 322.746 Tm
0 Tw
(P1)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 125 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 491.059 322.746 Tm
-0.0119 Tw
[( are ex-)]TJ
-33.1035 -1.1818 TD
0.0391 Tw
(ecuting simultaneously. However this implementation fails two other requirements of the)Tj
T*
0.0206 Tw
(critical-section problem. Describe these requirements, and how the above solution fails to)Tj
T*
0 Tw
(meet them.)Tj
32.1062 -1.7273 TD
([5 Marks])Tj
-34.6831 -1.7273 TD
-0.0135 Tw
[(\(c\))-1467.1(Ignoring the unmet requirements you identified in \(b\) ñ what feature inherent to the imple-)]TJ
2.5769 -1.1818 TD
0 Tw
(mentation in \(b\) makes it inefficient when run on a single processor machine?)Tj
32.1062 -1.6364 TD
([2 Marks])Tj
-34.6831 -1.7273 TD
0.1415 Tw
[(\(d\))-1410.9(Show how the above mutually exclusion implementation may be implemented using a)]TJ
2.5769 -1.1818 TD
0.0282 Tw
(hardware ìtest and setî atomic instruction. Under which circumstances will your solution)Tj
T*
0 Tw
(still be correct in the case that )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 128 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 261.005 169.746 Tm
(P0)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 131 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 273.225 169.746 Tm
( and )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 133 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 294.607 169.746 Tm
(P1)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 136 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 306.826 169.746 Tm
( are run on different processors?)Tj
15.7512 -1.6363 TD
([5 Marks])Tj
-34.6831 -1.7273 TD
0.0355 Tw
[(\(e\))-1467.1(Explain how counting semaphores may be used to provide process synchronisation while)]TJ
2.5769 -1.1818 TD
-0.0204 Tw
(avoiding busy waiting on a spin lock similar to that in the implementation shown above. In)Tj
T*
0 Tw
(general, are spin locks avoided entirely?)Tj
32.1062 -1.6364 TD
([2 Marks])Tj
ET
endstream
endobj
16 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 17 0 R
>>
/ExtGState <<
/GS2 6 0 R
>>
>>
endobj
19 0 obj
<<
/Length 3250
>>
stream
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
10 0 0 10 139 811 Tm
0 g
/GS2 gs
0 Tc
0 Tw
( )Tj
ET
Q
BT
/TT4 1 Tf
10 0 0 10 70.228 799.845 Tm
0 0 0 1 k
/GS2 gs
0 Tc
0 Tw
(Operating Systems)Tj
40.8292 0 TD
(Page 4 of 5)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
11 0 0 11 142 811 Tm
0 g
( )Tj
ET
Q
BT
11 0 0 11 98.575 763.745 Tm
-0.0574 Tw
[(\(f\))-1577.9(In which circumstances are spin locks preferred to queue based implementaions of synchro-)]TJ
2.5769 -1.1818 TD
0 Tw
(nisation primitives?)Tj
32.1062 -1.6364 TD
([2 Marks])Tj
-34.6831 -1.7273 TD
0.0355 Tw
[(\(g\))-1410.9(Show how a counting semaphore may be employed to implement barrier synchronisation)]TJ
2.5769 -1.1818 TD
0 Tw
(to enable two processes to synchronise. Extend your answer to the case of )Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT6 1 Tf
11 0 0 11 144 811 Tm
0 g
( )Tj
ET
Q
BT
/TT6 1 Tf
11 0 0 11 454.993 700.745 Tm
(n)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 147 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 460.493 700.745 Tm
( processes.)Tj
1.7815 -1.6363 TD
([4 Marks])Tj
-34.6831 -1.7273 TD
[(\(h\))-1410.9(Consider two processes, a producer:)]TJ
3.8655 -1.6364 TD
(producer: )Tj
0 -1.1818 TD
(while\(true\) {)Tj
3.8654 -1.1818 TD
(if \(top < N\) {)Tj
2.577 -1.1818 TD
(v = produce\(\);)Tj
T*
(store[top] = v;)Tj
T*
(top = top + 1;)Tj
-2.577 -1.1818 TD
(})Tj
-3.8654 -1.1818 TD
(})Tj
-1.2885 -1.7273 TD
(and a consumer:)Tj
1.2885 -1.7273 TD
(consumer: )Tj
0 -1.1818 TD
(while\(true\) {)Tj
3.8654 -1.1818 TD
(if \(top > 0\) {)Tj
2.577 -1.1818 TD
(v = store[top-1];)Tj
T*
(top = top - 1;)Tj
T*
(consume\(v\))Tj
-2.577 -1.1818 TD
(})Tj
-3.8654 -1.1818 TD
(})Tj
-1.2885 -1.7273 TD
-0.0076 Tw
(Run in parallel, these processes will exhibit both busy waiting and an unchecked race con-)Tj
0 -1.1818 TD
0.0005 Tw
(dition. Using multiple semaphores, rewrite the above processes eliminating all race condi-)Tj
T*
0 Tw
(tions and busy waiting.)Tj
32.1062 -1.7273 TD
([6 Marks])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 150 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 367.344 342.746 Tm
([Total Marks for Question 4:  29])Tj
-27.0105 -2.6364 TD
[(\(5\))-1410.9(Deadlock)]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 153 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 98.575 294.746 Tm
[(\(a\))-1467.1(Deadlock can occur if all four of the following conditions hold:)]TJ
5.1539 -1.6364 TD
[(ï)-938.4(mutual e)15.2(xclusion,)]TJ
0 -1.1818 TD
[(ï)-938.4(hold and w)10(ait,)]TJ
T*
[(ï)-938.4(no preemption, and)]TJ
T*
[(ï)-938.4(circular w)10(ait)]TJ
-2.577 -1.1818 TD
0.0645 Tw
(Describe how each condition may be violated by an operating system \(and hence ensure)Tj
T*
0 Tw
(deadlock is avoided\) and the ramifications of doing so.)Tj
32.1062 -1.7273 TD
([8 Marks])Tj
-34.6831 -1.7272 TD
0.0335 Tw
[(\(b\))-1410.9(Many operating systems choose to do nothing at all about the problem of deadlock in the)]TJ
2.5769 -1.1818 TD
-0.0018 Tw
(system. Describe two different strategies which may be adopted by an operating system to)Tj
T*
0 Tw
(deal with deadlock.)Tj
32.1062 -1.6364 TD
([6 Marks])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 155 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 367.344 110.747 Tm
([Total Marks for Question 5:  14])Tj
ET
endstream
endobj
20 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 17 0 R
>>
/ExtGState <<
/GS2 6 0 R
>>
>>
endobj
22 0 obj
<<
/Length 1326
>>
stream
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
10 0 0 10 158 811 Tm
0 g
/GS2 gs
0 Tc
0 Tw
( )Tj
ET
Q
BT
/TT4 1 Tf
10 0 0 10 70.228 799.845 Tm
0 0 0 1 k
/GS2 gs
0 Tc
0 Tw
(Operating Systems)Tj
40.8292 0 TD
(Page 5 of 5)Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 161 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 70.228 763.745 Tm
[(\(6\))-1410.9(Security and Distributed Systems)]TJ
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT4 1 Tf
11 0 0 11 163 811 Tm
0 g
( )Tj
ET
Q
BT
/TT4 1 Tf
11 0 0 11 98.575 744.745 Tm
[(\(a\))-1467.1(How can public key cryptography be used to authenticate users in a distributed system?)]TJ
34.6831 -1.6364 TD
([2 Marks])Tj
-34.6831 -1.7273 TD
0.0352 Tw
[(\(b\))-1410.9(Describe some strategies by which the threat of buffer overflow exploitations by external)]TJ
2.5769 -1.1818 TD
0 Tw
(malicious entities may be reduced or eliminated.)Tj
32.1062 -1.6363 TD
([3 Marks])Tj
-34.6831 -1.7273 TD
[(\(c\))-1467.1(What issues must be considered when marshaling parameters in RPC?)]TJ
34.6831 -1.6364 TD
([6 Marks])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
/TT2 1 Tf
11 0 0 11 166 811 Tm
0 g
( )Tj
ET
Q
BT
/TT2 1 Tf
11 0 0 11 367.344 620.746 Tm
([Total Marks for Question 6:  11])Tj
ET
q
1 i 
28 30 538 781 re
W n
BT
14 0 0 14 169 811 Tm
0 g
( )Tj
ET
Q
BT
14 0 0 14 236.707 588.746 Tm
(End of Examination)Tj
ET
endstream
endobj
23 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS2 6 0 R
>>
>>
endobj
6 0 obj
<<
/Type /ExtGState
/SA true
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
24 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
25 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
26 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 121
/Widths [250 0 0 0 0 0 0 0 333 333 0 0 250 0 0 278 
500 500 500 500 500 500 500 500 0 500 333 0 0 0 0 0 
0 722 667 722 722 667 611 778 778 389 0 778 667 944 722 778 
611 778 722 556 667 722 722 1000 722 722 0 333 0 333 0 0 
0 500 556 444 556 444 333 500 556 278 0 556 278 833 556 500 
556 0 444 389 333 556 0 0 500 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Bold
/FontDescriptor 24 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 239
/Widths [250 333 0 0 0 0 0 0 333 333 0 564 250 333 250 278 
500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 
0 722 667 667 722 611 556 722 722 333 0 0 611 889 722 722 
556 0 667 556 611 722 0 944 0 722 0 333 0 333 0 500 
0 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 
500 500 333 389 278 500 500 722 500 500 444 480 0 480 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 444 444 350 500 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 278 
]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Roman
/FontDescriptor 25 0 R
>>
endobj
17 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 120
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 333 0 0 
500 500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
611 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 444 500 444 0 0 0 278 0 0 278 722 500 500 
0 0 389 389 278 500 0 0 444 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Italic
/FontDescriptor 26 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
8 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 10 0 R
/Contents 9 0 R
>>
endobj
11 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 13 0 R
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 16 0 R
/Contents 15 0 R
>>
endobj
18 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 20 0 R
/Contents 19 0 R
>>
endobj
21 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 23 0 R
/Contents 22 0 R
>>
endobj
27 0 obj
<<
/S /D
>>
endobj
28 0 obj
<<
/Nums [0 27 0 R ]
>>
endobj
7 0 obj
<<
/Type /Pages
/Kids [1 0 R 8 0 R 11 0 R 14 0 R 18 0 R 21 0 R]
/Count 6
/MediaBox [0 0 595 842]
>>
endobj
29 0 obj
<<
/CreationDate (D:20050408155359+09'30')
/ModDate (D:20050408155359+09'30')
/Producer (PSNormalizer.framework)
>>
endobj
30 0 obj
<<
/Type /Catalog
/Pages 7 0 R
/PageLabels 28 0 R
>>
endobj
xref
0 31
0000000000 65535 f 
0000024951 00000 n 
0000000016 00000 n 
0000002285 00000 n 
0000023336 00000 n 
0000023809 00000 n 
0000022598 00000 n 
0000025512 00000 n 
0000025031 00000 n 
0000002391 00000 n 
0000006856 00000 n 
0000025112 00000 n 
0000006963 00000 n 
0000011174 00000 n 
0000025195 00000 n 
0000011281 00000 n 
0000017571 00000 n 
0000024564 00000 n 
0000025278 00000 n 
0000017690 00000 n 
0000020993 00000 n 
0000025361 00000 n 
0000021112 00000 n 
0000022491 00000 n 
0000022737 00000 n 
0000022939 00000 n 
0000023136 00000 n 
0000025444 00000 n 
0000025472 00000 n 
0000025627 00000 n 
0000025759 00000 n 
trailer
<<
/Size 31
/Root 30 0 R
/Info 29 0 R
/ID [<f96a4bfdf07cc62179a1215658625ca3><f96a4bfdf07cc62179a1215658625ca3>]
>>
startxref
25828
%%EOF
